// this file contains the implementation of logging middleware
// that logs requests and responses for the scanner service.
package middleware

import (
	"context"
	"time"

	"github.com/go-kit/kit/log"

	domain "github.com/lephuocmy668/vulnerability-scanner/domain"
)

// loggingMiddleware defines a struct containing the logger
// and the next scanner service in the chain.
type loggingMiddleware struct {
	logger log.Logger
	next   domain.ScannerService
}

// MakeLoggingMiddleware returns a new logging middleware
// instance that wraps the provided scanner service.
func MakeLoggingMiddleware(logger log.Logger, next domain.ScannerService) domain.ScannerService {
	return loggingMiddleware{logger, next}
}

// GetTaskDetail logs the request and response of GetTaskDetail
// method of the scanner service.
func (mw loggingMiddleware) GetTaskDetail(id string) (output *domain.ScanningTask, err error) {
	defer func(begin time.Time) {
		mw.logger.Log(
			"id", id,
			"output", output,
			"err", err,
			"took", time.Since(begin),
		)
	}(time.Now())

	output, err = mw.next.GetTaskDetail(id)
	return
}

// GetTasks logs the request and response of GetTasks method
// of the scanner service.
func (mw loggingMiddleware) GetTasks(request domain.GetTasksRequest) (output []domain.ScanningTask, err error) {
	defer func(begin time.Time) {
		mw.logger.Log(
			"status", request.Status,
			"output", output,
			"err", err,
			"took", time.Since(begin),
		)
	}(time.Now())

	output, err = mw.next.GetTasks(request)
	return
}

// CreateTask logs the request and response of CreateTask method
// of the scanner service.
func (mw loggingMiddleware) CreateTask(request domain.CreateTaskRequest) (output *domain.ScanningTask, err error) {
	defer func(begin time.Time) {
		mw.logger.Log(
			"repository_name", request.RepositoryName,
			"repository_url", request.RepositoryURL,
			"output", output,
			"err", err,
			"took", time.Since(begin),
		)
	}(time.Now())

	output, err = mw.next.CreateTask(request)
	return
}

// Scan logs the request and response of Scan method of the scanner
// service.
func (mw loggingMiddleware) Scan(taskID string, context context.Context) (output *domain.ScanningTask, err error) {
	defer func(begin time.Time) {
		mw.logger.Log(
			"task_id", taskID,
			"err", err,
			"took", time.Since(begin),
		)
	}(time.Now())

	output, err = mw.next.Scan(taskID, context)
	return
}
